{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\84925\\\\Downloads\\\\amazona-master\\\\amazona-master\\\\frontend\\\\src\\\\screens\\\\OrderHistoryScreen.js\";\nimport React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { listOrderMine } from '../actions/orderActions';\nimport LoadingBox from '../components/LoadingBox';\nimport MessageBox from '../components/MessageBox';\nimport Axios from 'axios';\nimport { PayPalButton } from 'react-paypal-button-v2'; // import React, { useEffect, useState } from 'react';\n// import { useDispatch, useSelector } from 'react-redux';\n\nimport { Link } from 'react-router-dom';\nimport { deliverOrder, detailsOrder, payOrder } from '../actions/orderActions'; // import LoadingBox from '../components/LoadingBox';\n// import MessageBox from '../components/MessageBox';\n\nimport { ORDER_DELIVER_RESET, ORDER_PAY_RESET } from '../constants/orderConstants';\nexport default function OrderHistoryScreen(props) {\n  const orderMineList = useSelector(state => state.orderMineList);\n  const {\n    loading,\n    error,\n    orders\n  } = orderMineList;\n  const dispatch = useDispatch();\n  const orderId = props.match.params.id;\n  const {\n    order\n  } = orderDetails;\n\n  const deliverHandler = () => {\n    dispatch(deliverOrder(order._id));\n  };\n\n  useEffect(() => {\n    if (!order || // successPay ||\n    // successDeliver ||\n    order && order._id !== orderId) {\n      dispatch({\n        type: ORDER_PAY_RESET\n      });\n      dispatch({\n        type: ORDER_DELIVER_RESET\n      });\n      dispatch(detailsOrder(orderId));\n    } else {\n      if (!order.isPaid) {\n        if (!window.paypal) {\n          addPayPalScript();\n        } else {\n          setSdkReady(true);\n        }\n      }\n    }\n\n    dispatch(listOrderMine());\n  }, [dispatch, orderId, sdkReady, successPay, successDeliver, order]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }\n  }, \"Order History\"), loading ? /*#__PURE__*/React.createElement(LoadingBox, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }\n  }) : error ? /*#__PURE__*/React.createElement(MessageBox, {\n    variant: \"danger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }\n  }, error) : /*#__PURE__*/React.createElement(\"table\", {\n    className: \"table\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 15\n    }\n  }, \"ID\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 15\n    }\n  }, \"DATE\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 15\n    }\n  }, \"TOTAL\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 15\n    }\n  }, \"PAID\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 15\n    }\n  }, \"DELIVERED\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 15\n    }\n  }, \"ACTIONS\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 11\n    }\n  }, orders.map(order => /*#__PURE__*/React.createElement(\"tr\", {\n    key: order._id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 17\n    }\n  }, order._id), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 17\n    }\n  }, order.createdAt.substring(0, 10)), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 17\n    }\n  }, order.totalPrice.toFixed(2)), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 17\n    }\n  }, order.isPaid ? order.paidAt.substring(0, 10) : 'No'), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 17\n    }\n  }, order.isDelivered ? order.deliveredAt.substring(0, 10) : 'No'), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"small\",\n    onClick: () => {\n      props.history.push(`/order/${order._id}`);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 19\n    }\n  }, \"Details\")))))));\n}","map":{"version":3,"sources":["C:/Users/84925/Downloads/amazona-master/amazona-master/frontend/src/screens/OrderHistoryScreen.js"],"names":["React","useEffect","useDispatch","useSelector","listOrderMine","LoadingBox","MessageBox","Axios","PayPalButton","Link","deliverOrder","detailsOrder","payOrder","ORDER_DELIVER_RESET","ORDER_PAY_RESET","OrderHistoryScreen","props","orderMineList","state","loading","error","orders","dispatch","orderId","match","params","id","order","orderDetails","deliverHandler","_id","type","isPaid","window","paypal","addPayPalScript","setSdkReady","sdkReady","successPay","successDeliver","map","createdAt","substring","totalPrice","toFixed","paidAt","isDelivered","deliveredAt","history","push"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { listOrderMine } from '../actions/orderActions';\nimport LoadingBox from '../components/LoadingBox';\nimport MessageBox from '../components/MessageBox';\nimport Axios from 'axios';\nimport { PayPalButton } from 'react-paypal-button-v2';\n// import React, { useEffect, useState } from 'react';\n// import { useDispatch, useSelector } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { deliverOrder, detailsOrder, payOrder } from '../actions/orderActions';\n// import LoadingBox from '../components/LoadingBox';\n// import MessageBox from '../components/MessageBox';\nimport {\n  ORDER_DELIVER_RESET,\n  ORDER_PAY_RESET,\n} from '../constants/orderConstants';\nexport default function OrderHistoryScreen(props) {\n  const orderMineList = useSelector((state) => state.orderMineList);\n  const { loading, error, orders } = orderMineList;\n  const dispatch = useDispatch();\n  const orderId = props.match.params.id;\n  const { order} = orderDetails;\n\n\nconst deliverHandler = () => {\n  dispatch(deliverOrder(order._id));\n};\n  useEffect(() => {\n    if (\n      !order ||\n      // successPay ||\n      // successDeliver ||\n      (order && order._id !== orderId)\n    ) {\n      dispatch({ type: ORDER_PAY_RESET });\n      dispatch({ type: ORDER_DELIVER_RESET });\n      dispatch(detailsOrder(orderId));\n    } else {\n      if (!order.isPaid) {\n        if (!window.paypal) {\n          addPayPalScript();\n        } else {\n          setSdkReady(true);\n        }\n      }\n    }  \n      dispatch(listOrderMine());\n  }, [dispatch, orderId, sdkReady, successPay, successDeliver, order]);\n\n\n  return (\n    <div>\n      <h1>Order History</h1>\n      {loading ? (\n        <LoadingBox></LoadingBox>\n      ) : error ? (\n        <MessageBox variant=\"danger\">{error}</MessageBox>\n      ) : (\n        <table className=\"table\">\n          <thead>\n            <tr>\n              <th>ID</th>\n              <th>DATE</th>\n              <th>TOTAL</th>\n              <th>PAID</th>\n              <th>DELIVERED</th>\n              <th>ACTIONS</th>\n            </tr>\n          </thead>\n          <tbody>\n            {orders.map((order) => (\n              <tr key={order._id}>\n                <td>{order._id}</td>\n                <td>{order.createdAt.substring(0, 10)}</td>\n                <td>{order.totalPrice.toFixed(2)}</td>\n                <td>{order.isPaid ? order.paidAt.substring(0, 10) : 'No'}</td>\n                <td>\n                  {order.isDelivered\n                    ? order.deliveredAt.substring(0, 10)\n                    : 'No'}\n                </td>\n                <td>\n                  <button\n                    type=\"button\"\n                    className=\"small\"\n                    onClick={() => {\n                      props.history.push(`/order/${order._id}`);\n                    }}\n                  >\n                    Details\n                  </button>\n                </td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      )}\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}