{"ast":null,"code":"import Axios from 'axios';\nimport { CART_EMPTY } from '../constants/cartConstants';\nimport { ORDER_CREATE_FAIL, ORDER_CREATE_REQUEST, ORDER_CREATE_SUCCESS // ORDER_DETAILS_FAIL,\n, ORDER_DETAILS_REQUEST // ORDER_DETAILS_SUCCESS,\n, ORDER_PAY_REQUEST // ORDER_PAY_FAIL,\n// ORDER_PAY_SUCCESS,\n, ORDER_MINE_LIST_REQUEST // ORDER_MINE_LIST_FAIL,\n// ORDER_MINE_LIST_SUCCESS,\n, ORDER_LIST_REQUEST // ORDER_LIST_SUCCESS,\n// ORDER_LIST_FAIL,\n, ORDER_DELETE_REQUEST // ORDER_DELETE_SUCCESS,\n// ORDER_DELETE_FAIL,\n, ORDER_DELIVER_REQUEST // ORDER_DELIVER_SUCCESS,\n// ORDER_DELIVER_FAIL,\n, ORDER_SUMMARY_REQUEST // ORDER_SUMMARY_SUCCESS,\n} from '../constants/orderConstants';\nexport const createOrder = order => async (dispatch, getState) => {\n  dispatch({\n    type: ORDER_CREATE_REQUEST,\n    payload: order\n  });\n\n  try {\n    const {\n      userSignin: {\n        userInfo\n      }\n    } = getState();\n    const {\n      data\n    } = await Axios.post('/api/orders', order, {// headers: {\n      //   // Authorization: `Bearer ${userInfo.token}`,\n      // },\n    });\n    dispatch({\n      type: ORDER_CREATE_SUCCESS,\n      payload: data.order\n    });\n    dispatch({\n      type: CART_EMPTY\n    });\n    localStorage.removeItem('cartItems');\n  } catch (error) {\n    dispatch({\n      type: ORDER_CREATE_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const detailsOrder = orderId => async (dispatch, getState) => {\n  dispatch({\n    type: ORDER_DETAILS_REQUEST,\n    payload: orderId\n  });\n  const {\n    userSignin: {\n      userInfo\n    }\n  } = getState(); // try {\n  //   const { data } = await Axios.get(`/api/orders/${orderId}`, {\n  //     headers: { Authorization: `Bearer ${userInfo.token}` },\n  //   });\n  //   dispatch({ type: ORDER_DETAILS_SUCCESS, payload: data });\n  // } catch (error) {\n  //   const message =\n  //     error.response && error.response.data.message\n  //       ? error.response.data.message\n  //       : error.message;\n  //   dispatch({ type: ORDER_DETAILS_FAIL, payload: message });\n  // }\n};\nexport const payOrder = (order, paymentResult) => async (dispatch, getState) => {\n  dispatch({\n    type: ORDER_PAY_REQUEST,\n    payload: {\n      order,\n      paymentResult\n    }\n  });\n  const {\n    userSignin: {\n      userInfo\n    }\n  } = getState(); // try {\n  //   const { data } = Axios.put(`/api/orders/${order._id}/pay`, paymentResult, {\n  //     headers: { Authorization: `Bearer ${userInfo.token}` },\n  //   });\n  //   dispatch({ type: ORDER_PAY_SUCCESS, payload: data });\n  // } catch (error) {\n  //   const message =\n  //     error.response && error.response.data.message\n  //       ? error.response.data.message\n  //       : error.message;\n  //   dispatch({ type: ORDER_PAY_FAIL, payload: message });\n  // }\n};\nexport const listOrderMine = () => async (dispatch, getState) => {\n  dispatch({\n    type: ORDER_MINE_LIST_REQUEST\n  });\n  const {\n    userSignin: {\n      userInfo\n    }\n  } = getState(); // try {\n  //   const { data } = await Axios.get('/api/orders/mine', {\n  //     headers: {\n  //       Authorization: `Bearer ${userInfo.token}`,\n  //     },\n  //   });\n  //   dispatch({ type: ORDER_MINE_LIST_SUCCESS, payload: data });\n  // } catch (error) {\n  //   const message =\n  //     error.response && error.response.data.message\n  //       ? error.response.data.message\n  //       : error.message;\n  //   dispatch({ type: ORDER_MINE_LIST_FAIL, payload: message });\n  // }\n};\nexport const listOrders = ({\n  seller = ''\n}) => async (dispatch, getState) => {\n  dispatch({\n    type: ORDER_LIST_REQUEST\n  });\n  const {\n    userSignin: {\n      userInfo\n    }\n  } = getState(); // try {\n  //   const { data } = await Axios.get(`/api/orders?seller=${seller}`, {\n  //     headers: { Authorization: `Bearer ${userInfo.token}` },\n  //   });\n  //   console.log(data);\n  //   dispatch({ type: ORDER_LIST_SUCCESS, payload: data });\n  // } catch (error) {\n  //   const message =\n  //     error.response && error.response.data.message\n  //       ? error.response.data.message\n  //       : error.message;\n  //   dispatch({ type: ORDER_LIST_FAIL, payload: message });\n  // }\n};\nexport const deleteOrder = orderId => async (dispatch, getState) => {\n  dispatch({\n    type: ORDER_DELETE_REQUEST,\n    payload: orderId\n  });\n  const {\n    userSignin: {\n      userInfo\n    }\n  } = getState(); // try {\n  //   const { data } = Axios.delete(`/api/orders/${orderId}`, {\n  //     headers: { Authorization: `Bearer ${userInfo.token}` },\n  //   });\n  //   dispatch({ type: ORDER_DELETE_SUCCESS, payload: data });\n  // } catch (error) {\n  //   const message =\n  //     error.response && error.response.data.message\n  //       ? error.response.data.message\n  //       : error.message;\n  //   dispatch({ type: ORDER_DELETE_FAIL, payload: message });\n  // }\n};\nexport const deliverOrder = orderId => async (dispatch, getState) => {\n  dispatch({\n    type: ORDER_DELIVER_REQUEST,\n    payload: orderId\n  });\n  const {\n    userSignin: {\n      userInfo\n    }\n  } = getState(); // try {\n  //   const { data } = Axios.put(\n  //     `/api/orders/${orderId}/deliver`,\n  //     {},\n  //     {\n  //       headers: { Authorization: `Bearer ${userInfo.token}` },\n  //     }\n  //   );\n  //   dispatch({ type: ORDER_DELIVER_SUCCESS, payload: data });\n  // } catch (error) {\n  //   const message =\n  //     error.response && error.response.data.message\n  //       ? error.response.data.message\n  //       : error.message;\n  //   dispatch({ type: ORDER_DELIVER_FAIL, payload: message });\n  // }\n};\nexport const summaryOrder = () => async (dispatch, getState) => {\n  dispatch({\n    type: ORDER_SUMMARY_REQUEST\n  });\n  const {\n    userSignin: {\n      userInfo\n    }\n  } = getState(); // try {\n  //   const { data } = await Axios.get('/api/orders/summary', {\n  //     headers: { Authorization: `Bearer ${userInfo.token}` },\n  //   });\n  //   dispatch({ type: ORDER_SUMMARY_SUCCESS, payload: data });\n  // } catch (error) {\n  //   dispatch({\n  //     type: ORDER_CREATE_FAIL,\n  //     payload:\n  //       error.response && error.response.data.message\n  //         ? error.response.data.message\n  //         : error.message,\n  //   });\n  // }\n};","map":{"version":3,"sources":["C:/Users/84925/Downloads/amazona-master/amazona-master/frontend/src/actions/orderActions.js"],"names":["Axios","CART_EMPTY","ORDER_CREATE_FAIL","ORDER_CREATE_REQUEST","ORDER_CREATE_SUCCESS","ORDER_DETAILS_REQUEST","ORDER_PAY_REQUEST","ORDER_MINE_LIST_REQUEST","ORDER_LIST_REQUEST","ORDER_DELETE_REQUEST","ORDER_DELIVER_REQUEST","ORDER_SUMMARY_REQUEST","createOrder","order","dispatch","getState","type","payload","userSignin","userInfo","data","post","localStorage","removeItem","error","response","message","detailsOrder","orderId","payOrder","paymentResult","listOrderMine","listOrders","seller","deleteOrder","deliverOrder","summaryOrder"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,QAA2B,4BAA3B;AACA,SACEC,iBADF,EAEEC,oBAFF,EAGEC,oBAHF,CAIE;AAJF,EAKEC,qBALF,CAME;AANF,EAOEC,iBAPF,CAQE;AACA;AATF,EAUEC,uBAVF,CAWE;AACA;AAZF,EAaEC,kBAbF,CAcE;AACA;AAfF,EAgBEC,oBAhBF,CAiBE;AACA;AAlBF,EAmBEC,qBAnBF,CAoBE;AACA;AArBF,EAsBEC,qBAtBF,CAuBE;AAvBF,OAwBO,6BAxBP;AA0BA,OAAO,MAAMC,WAAW,GAAIC,KAAD,IAAW,OAAOC,QAAP,EAAiBC,QAAjB,KAA8B;AAClED,EAAAA,QAAQ,CAAC;AAAEE,IAAAA,IAAI,EAAEb,oBAAR;AAA8Bc,IAAAA,OAAO,EAAEJ;AAAvC,GAAD,CAAR;;AACA,MAAI;AACF,UAAM;AACJK,MAAAA,UAAU,EAAE;AAAEC,QAAAA;AAAF;AADR,QAEFJ,QAAQ,EAFZ;AAGA,UAAM;AAAEK,MAAAA;AAAF,QAAW,MAAMpB,KAAK,CAACqB,IAAN,CAAW,aAAX,EAA0BR,KAA1B,EAAiC,CACtD;AACA;AACA;AAHsD,KAAjC,CAAvB;AAKAC,IAAAA,QAAQ,CAAC;AAAEE,MAAAA,IAAI,EAAEZ,oBAAR;AAA8Ba,MAAAA,OAAO,EAAEG,IAAI,CAACP;AAA5C,KAAD,CAAR;AACAC,IAAAA,QAAQ,CAAC;AAAEE,MAAAA,IAAI,EAAEf;AAAR,KAAD,CAAR;AACAqB,IAAAA,YAAY,CAACC,UAAb,CAAwB,WAAxB;AACD,GAZD,CAYE,OAAOC,KAAP,EAAc;AACdV,IAAAA,QAAQ,CAAC;AACPE,MAAAA,IAAI,EAAEd,iBADC;AAEPe,MAAAA,OAAO,EACLO,KAAK,CAACC,QAAN,IAAkBD,KAAK,CAACC,QAAN,CAAeL,IAAf,CAAoBM,OAAtC,GACIF,KAAK,CAACC,QAAN,CAAeL,IAAf,CAAoBM,OADxB,GAEIF,KAAK,CAACE;AALL,KAAD,CAAR;AAOD;AACF,CAvBM;AAyBP,OAAO,MAAMC,YAAY,GAAIC,OAAD,IAAa,OAAOd,QAAP,EAAiBC,QAAjB,KAA8B;AACrED,EAAAA,QAAQ,CAAC;AAAEE,IAAAA,IAAI,EAAEX,qBAAR;AAA+BY,IAAAA,OAAO,EAAEW;AAAxC,GAAD,CAAR;AACA,QAAM;AACJV,IAAAA,UAAU,EAAE;AAAEC,MAAAA;AAAF;AADR,MAEFJ,QAAQ,EAFZ,CAFqE,CAKrE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACD,CAjBM;AAmBP,OAAO,MAAMc,QAAQ,GAAG,CAAChB,KAAD,EAAQiB,aAAR,KAA0B,OAChDhB,QADgD,EAEhDC,QAFgD,KAG7C;AACHD,EAAAA,QAAQ,CAAC;AAAEE,IAAAA,IAAI,EAAEV,iBAAR;AAA2BW,IAAAA,OAAO,EAAE;AAAEJ,MAAAA,KAAF;AAASiB,MAAAA;AAAT;AAApC,GAAD,CAAR;AACA,QAAM;AACJZ,IAAAA,UAAU,EAAE;AAAEC,MAAAA;AAAF;AADR,MAEFJ,QAAQ,EAFZ,CAFG,CAKH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACD,CApBM;AAqBP,OAAO,MAAMgB,aAAa,GAAG,MAAM,OAAOjB,QAAP,EAAiBC,QAAjB,KAA8B;AAC/DD,EAAAA,QAAQ,CAAC;AAAEE,IAAAA,IAAI,EAAET;AAAR,GAAD,CAAR;AACA,QAAM;AACJW,IAAAA,UAAU,EAAE;AAAEC,MAAAA;AAAF;AADR,MAEFJ,QAAQ,EAFZ,CAF+D,CAK/D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACD,CAnBM;AAoBP,OAAO,MAAMiB,UAAU,GAAG,CAAC;AAAEC,EAAAA,MAAM,GAAG;AAAX,CAAD,KAAqB,OAAOnB,QAAP,EAAiBC,QAAjB,KAA8B;AAC3ED,EAAAA,QAAQ,CAAC;AAAEE,IAAAA,IAAI,EAAER;AAAR,GAAD,CAAR;AACA,QAAM;AACJU,IAAAA,UAAU,EAAE;AAAEC,MAAAA;AAAF;AADR,MAEFJ,QAAQ,EAFZ,CAF2E,CAK3E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACD,CAlBM;AAmBP,OAAO,MAAMmB,WAAW,GAAIN,OAAD,IAAa,OAAOd,QAAP,EAAiBC,QAAjB,KAA8B;AACpED,EAAAA,QAAQ,CAAC;AAAEE,IAAAA,IAAI,EAAEP,oBAAR;AAA8BQ,IAAAA,OAAO,EAAEW;AAAvC,GAAD,CAAR;AACA,QAAM;AACJV,IAAAA,UAAU,EAAE;AAAEC,MAAAA;AAAF;AADR,MAEFJ,QAAQ,EAFZ,CAFoE,CAKpE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACD,CAjBM;AAmBP,OAAO,MAAMoB,YAAY,GAAIP,OAAD,IAAa,OAAOd,QAAP,EAAiBC,QAAjB,KAA8B;AACrED,EAAAA,QAAQ,CAAC;AAAEE,IAAAA,IAAI,EAAEN,qBAAR;AAA+BO,IAAAA,OAAO,EAAEW;AAAxC,GAAD,CAAR;AACA,QAAM;AACJV,IAAAA,UAAU,EAAE;AAAEC,MAAAA;AAAF;AADR,MAEFJ,QAAQ,EAFZ,CAFqE,CAKrE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACD,CArBM;AAuBP,OAAO,MAAMqB,YAAY,GAAG,MAAM,OAAOtB,QAAP,EAAiBC,QAAjB,KAA8B;AAC9DD,EAAAA,QAAQ,CAAC;AAAEE,IAAAA,IAAI,EAAEL;AAAR,GAAD,CAAR;AACA,QAAM;AACJO,IAAAA,UAAU,EAAE;AAAEC,MAAAA;AAAF;AADR,MAEFJ,QAAQ,EAFZ,CAF8D,CAK9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACD,CAnBM","sourcesContent":["import Axios from 'axios';\nimport { CART_EMPTY } from '../constants/cartConstants';\nimport {\n  ORDER_CREATE_FAIL,\n  ORDER_CREATE_REQUEST,\n  ORDER_CREATE_SUCCESS,\n  // ORDER_DETAILS_FAIL,\n  ORDER_DETAILS_REQUEST,\n  // ORDER_DETAILS_SUCCESS,\n  ORDER_PAY_REQUEST,\n  // ORDER_PAY_FAIL,\n  // ORDER_PAY_SUCCESS,\n  ORDER_MINE_LIST_REQUEST,\n  // ORDER_MINE_LIST_FAIL,\n  // ORDER_MINE_LIST_SUCCESS,\n  ORDER_LIST_REQUEST,\n  // ORDER_LIST_SUCCESS,\n  // ORDER_LIST_FAIL,\n  ORDER_DELETE_REQUEST,\n  // ORDER_DELETE_SUCCESS,\n  // ORDER_DELETE_FAIL,\n  ORDER_DELIVER_REQUEST,\n  // ORDER_DELIVER_SUCCESS,\n  // ORDER_DELIVER_FAIL,\n  ORDER_SUMMARY_REQUEST,\n  // ORDER_SUMMARY_SUCCESS,\n} from '../constants/orderConstants';\n\nexport const createOrder = (order) => async (dispatch, getState) => {\n  dispatch({ type: ORDER_CREATE_REQUEST, payload: order });\n  try {\n    const {\n      userSignin: { userInfo },\n    } = getState();\n    const { data } = await Axios.post('/api/orders', order, {\n      // headers: {\n      //   // Authorization: `Bearer ${userInfo.token}`,\n      // },\n    });\n    dispatch({ type: ORDER_CREATE_SUCCESS, payload: data.order });\n    dispatch({ type: CART_EMPTY });\n    localStorage.removeItem('cartItems');\n  } catch (error) {\n    dispatch({\n      type: ORDER_CREATE_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n\nexport const detailsOrder = (orderId) => async (dispatch, getState) => {\n  dispatch({ type: ORDER_DETAILS_REQUEST, payload: orderId });\n  const {\n    userSignin: { userInfo },\n  } = getState();\n  // try {\n  //   const { data } = await Axios.get(`/api/orders/${orderId}`, {\n  //     headers: { Authorization: `Bearer ${userInfo.token}` },\n  //   });\n  //   dispatch({ type: ORDER_DETAILS_SUCCESS, payload: data });\n  // } catch (error) {\n  //   const message =\n  //     error.response && error.response.data.message\n  //       ? error.response.data.message\n  //       : error.message;\n  //   dispatch({ type: ORDER_DETAILS_FAIL, payload: message });\n  // }\n};\n\nexport const payOrder = (order, paymentResult) => async (\n  dispatch,\n  getState\n) => {\n  dispatch({ type: ORDER_PAY_REQUEST, payload: { order, paymentResult } });\n  const {\n    userSignin: { userInfo },\n  } = getState();\n  // try {\n  //   const { data } = Axios.put(`/api/orders/${order._id}/pay`, paymentResult, {\n  //     headers: { Authorization: `Bearer ${userInfo.token}` },\n  //   });\n  //   dispatch({ type: ORDER_PAY_SUCCESS, payload: data });\n  // } catch (error) {\n  //   const message =\n  //     error.response && error.response.data.message\n  //       ? error.response.data.message\n  //       : error.message;\n  //   dispatch({ type: ORDER_PAY_FAIL, payload: message });\n  // }\n};\nexport const listOrderMine = () => async (dispatch, getState) => {\n  dispatch({ type: ORDER_MINE_LIST_REQUEST });\n  const {\n    userSignin: { userInfo },\n  } = getState();\n  // try {\n  //   const { data } = await Axios.get('/api/orders/mine', {\n  //     headers: {\n  //       Authorization: `Bearer ${userInfo.token}`,\n  //     },\n  //   });\n  //   dispatch({ type: ORDER_MINE_LIST_SUCCESS, payload: data });\n  // } catch (error) {\n  //   const message =\n  //     error.response && error.response.data.message\n  //       ? error.response.data.message\n  //       : error.message;\n  //   dispatch({ type: ORDER_MINE_LIST_FAIL, payload: message });\n  // }\n};\nexport const listOrders = ({ seller = '' }) => async (dispatch, getState) => {\n  dispatch({ type: ORDER_LIST_REQUEST });\n  const {\n    userSignin: { userInfo },\n  } = getState();\n  // try {\n  //   const { data } = await Axios.get(`/api/orders?seller=${seller}`, {\n  //     headers: { Authorization: `Bearer ${userInfo.token}` },\n  //   });\n  //   console.log(data);\n  //   dispatch({ type: ORDER_LIST_SUCCESS, payload: data });\n  // } catch (error) {\n  //   const message =\n  //     error.response && error.response.data.message\n  //       ? error.response.data.message\n  //       : error.message;\n  //   dispatch({ type: ORDER_LIST_FAIL, payload: message });\n  // }\n};\nexport const deleteOrder = (orderId) => async (dispatch, getState) => {\n  dispatch({ type: ORDER_DELETE_REQUEST, payload: orderId });\n  const {\n    userSignin: { userInfo },\n  } = getState();\n  // try {\n  //   const { data } = Axios.delete(`/api/orders/${orderId}`, {\n  //     headers: { Authorization: `Bearer ${userInfo.token}` },\n  //   });\n  //   dispatch({ type: ORDER_DELETE_SUCCESS, payload: data });\n  // } catch (error) {\n  //   const message =\n  //     error.response && error.response.data.message\n  //       ? error.response.data.message\n  //       : error.message;\n  //   dispatch({ type: ORDER_DELETE_FAIL, payload: message });\n  // }\n};\n\nexport const deliverOrder = (orderId) => async (dispatch, getState) => {\n  dispatch({ type: ORDER_DELIVER_REQUEST, payload: orderId });\n  const {\n    userSignin: { userInfo },\n  } = getState();\n  // try {\n  //   const { data } = Axios.put(\n  //     `/api/orders/${orderId}/deliver`,\n  //     {},\n  //     {\n  //       headers: { Authorization: `Bearer ${userInfo.token}` },\n  //     }\n  //   );\n  //   dispatch({ type: ORDER_DELIVER_SUCCESS, payload: data });\n  // } catch (error) {\n  //   const message =\n  //     error.response && error.response.data.message\n  //       ? error.response.data.message\n  //       : error.message;\n  //   dispatch({ type: ORDER_DELIVER_FAIL, payload: message });\n  // }\n};\n\nexport const summaryOrder = () => async (dispatch, getState) => {\n  dispatch({ type: ORDER_SUMMARY_REQUEST });\n  const {\n    userSignin: { userInfo },\n  } = getState();\n  // try {\n  //   const { data } = await Axios.get('/api/orders/summary', {\n  //     headers: { Authorization: `Bearer ${userInfo.token}` },\n  //   });\n  //   dispatch({ type: ORDER_SUMMARY_SUCCESS, payload: data });\n  // } catch (error) {\n  //   dispatch({\n  //     type: ORDER_CREATE_FAIL,\n  //     payload:\n  //       error.response && error.response.data.message\n  //         ? error.response.data.message\n  //         : error.message,\n  //   });\n  // }\n};\n"]},"metadata":{},"sourceType":"module"}