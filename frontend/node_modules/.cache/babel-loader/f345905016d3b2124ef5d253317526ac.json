{"ast":null,"code":"import Axios from 'axios';\nimport { CART_EMPTY } from '../constants/cartConstants';\nimport { ORDER_CREATE_FAIL, ORDER_CREATE_REQUEST, ORDER_CREATE_SUCCESS, ORDER_DETAILS_FAIL, ORDER_DETAILS_REQUEST, ORDER_DETAILS_SUCCESS // ORDER_PAY_REQUEST,\n// ORDER_PAY_FAIL,\n// ORDER_PAY_SUCCESS,\n// ORDER_MINE_LIST_REQUEST,\n// ORDER_MINE_LIST_FAIL,\n// ORDER_MINE_LIST_SUCCESS,\n, ORDER_LIST_REQUEST, ORDER_LIST_SUCCESS, ORDER_LIST_FAIL, ORDER_DELETE_REQUEST, ORDER_DELETE_SUCCESS, ORDER_DELETE_FAIL, ORDER_DELIVER_REQUEST, ORDER_DELIVER_SUCCESS, ORDER_DELIVER_FAIL // ORDER_SUMMARY_REQUEST,\n// ORDER_SUMMARY_SUCCESS,\n} from '../constants/orderConstants';\nexport const createOrder = order => async (dispatch, getState) => {\n  dispatch({\n    type: ORDER_CREATE_REQUEST,\n    payload: order\n  });\n\n  try {\n    // const {\n    //   userSignin: { userInfo },\n    // } = getState();\n    const {\n      data\n    } = await Axios.post('/api/orders', order, {// headers: {\n      //   Authorization: `Bearer ${userInfo.token}`,\n      // },\n    });\n    dispatch({\n      type: ORDER_CREATE_SUCCESS,\n      payload: data.order\n    });\n    dispatch({\n      type: CART_EMPTY\n    });\n    localStorage.removeItem('cartItems');\n  } catch (error) {\n    dispatch({\n      type: ORDER_CREATE_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const detailsOrder = orderId => async (dispatch, getState) => {\n  dispatch({\n    type: ORDER_DETAILS_REQUEST,\n    payload: orderId\n  }); // const {\n  //   userSignin: { userInfo },\n  // } = getState();\n\n  try {\n    const {\n      data\n    } = await Axios.get(`/api/orders/${orderId}`, {// headers: { Authorization: `Bearer ${userInfo.token}` },\n    });\n    dispatch({\n      type: ORDER_DETAILS_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\n    dispatch({\n      type: ORDER_DETAILS_FAIL,\n      payload: message\n    });\n  }\n}; // export const payOrder = (order, paymentResult) => async (\n//   dispatch,\n//   getState\n// ) => {\n//   dispatch({ type: ORDER_PAY_REQUEST, payload: { order, paymentResult } });\n//   const {\n//     userSignin: { userInfo },\n//   } = getState();\n//   try {\n//     const { data } = Axios.put(`/api/orders/${order._id}/pay`, paymentResult, {\n//       headers: { Authorization: `Bearer ${userInfo.token}` },\n//     });\n//     dispatch({ type: ORDER_PAY_SUCCESS, payload: data });\n//   } catch (error) {\n//     const message =\n//       error.response && error.response.data.message\n//         ? error.response.data.message\n//         : error.message;\n//     dispatch({ type: ORDER_PAY_FAIL, payload: message });\n//   }\n// };\n// export const listOrderMine = () => async (dispatch, getState) => {\n//   dispatch({ type: ORDER_MINE_LIST_REQUEST });\n//   // const {\n//   //   userSignin: { userInfo },\n//   // } = getState();\n//   try {\n//     const { data } = await Axios.get('/api/orders/mine', {\n//       // headers: {\n//       //   Authorization: `Bearer ${userInfo.token}`,\n//       // },\n//     });\n//     dispatch({ type: ORDER_MINE_LIST_SUCCESS, payload: data });\n//   } catch (error) {\n//     const message =\n//       error.response && error.response.data.message\n//         ? error.response.data.message\n//         : error.message;\n//     dispatch({ type: ORDER_MINE_LIST_FAIL, payload: message });\n//   }\n// };\n\nexport const listOrders = () => async (dispatch, getState) => {\n  dispatch({\n    type: ORDER_LIST_REQUEST\n  }); // const {\n  //   userSignin: { userInfo },\n  // } = getState();\n\n  try {\n    const {\n      data\n    } = await Axios.get(`/api/orders`, {// headers: { Authorization: `Bearer ${userInfo.token}` },\n    });\n    console.log(data);\n    dispatch({\n      type: ORDER_LIST_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\n    dispatch({\n      type: ORDER_LIST_FAIL,\n      payload: message\n    });\n  }\n};\nexport const deleteOrder = orderId => async (dispatch, getState) => {\n  dispatch({\n    type: ORDER_DELETE_REQUEST,\n    payload: orderId\n  }); // const {\n  //   userSignin: { userInfo },\n  // } = getState();\n\n  try {\n    const {\n      data\n    } = Axios.delete(`/api/orders/${orderId}`, {// headers: { Authorization: `Bearer ${userInfo.token}` },\n    });\n    dispatch({\n      type: ORDER_DELETE_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\n    dispatch({\n      type: ORDER_DELETE_FAIL,\n      payload: message\n    });\n  }\n}; // export const deliverOrder = (orderId) => async (dispatch, getState) => {\n//   dispatch({ type: ORDER_DELIVER_REQUEST, payload: orderId });\n//   // const {\n//   //   userSignin: { userInfo },\n//   // } = getState();\n//   try {\n//     const { data } = Axios.put(\n//       `/api/orders/${orderId}/deliver`,\n//       {}\n//       // {\n//       //   headers: { Authorization: `Bearer ${userInfo.token}` },\n//       // }\n//     );\n//     dispatch({ type: ORDER_DELIVER_SUCCESS, payload: data });\n//   } catch (error) {\n//     const message =\n//       error.response && error.response.data.message\n//         ? error.response.data.message\n//         : error.message;\n//     dispatch({ type: ORDER_DELIVER_FAIL, payload: message });\n//   }\n// };\n// export const summaryOrder = () => async (dispatch, getState) => {\n//   dispatch({ type: ORDER_SUMMARY_REQUEST });\n//   const {\n//     userSignin: { userInfo },\n//   } = getState();\n//   try {\n//     const { data } = await Axios.get('/api/orders/summary', {\n//       headers: { Authorization: `Bearer ${userInfo.token}` },\n//     });\n//     dispatch({ type: ORDER_SUMMARY_SUCCESS, payload: data });\n//   } catch (error) {\n//     dispatch({\n//       type: ORDER_CREATE_FAIL,\n//       payload:\n//         error.response && error.response.data.message\n//           ? error.response.data.message\n//           : error.message,\n//     });\n//   }\n// };\n\nexport const deliverOrder = order => async (dispatch, getState) => {\n  dispatch({\n    type: ORDER_DELIVER_REQUEST,\n    payload: order\n  }); // const {\n  //   userSignin: { userInfo },\n  // } = getState();\n\n  try {\n    const {\n      data\n    } = await Axios.put(`/api/orders/${order._id}`, order, {} // {\n    //   headers: { Authorization: `Bearer ${userInfo.token}` },\n    // }\n    );\n    dispatch({\n      type: ORDER_DELIVER_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\n    dispatch({\n      type: ORDER_DELIVER_FAIL,\n      payload: message\n    });\n  }\n};","map":{"version":3,"sources":["D:/duantotnghiep/frontend/src/actions/orderActions.js"],"names":["Axios","CART_EMPTY","ORDER_CREATE_FAIL","ORDER_CREATE_REQUEST","ORDER_CREATE_SUCCESS","ORDER_DETAILS_FAIL","ORDER_DETAILS_REQUEST","ORDER_DETAILS_SUCCESS","ORDER_LIST_REQUEST","ORDER_LIST_SUCCESS","ORDER_LIST_FAIL","ORDER_DELETE_REQUEST","ORDER_DELETE_SUCCESS","ORDER_DELETE_FAIL","ORDER_DELIVER_REQUEST","ORDER_DELIVER_SUCCESS","ORDER_DELIVER_FAIL","createOrder","order","dispatch","getState","type","payload","data","post","localStorage","removeItem","error","response","message","detailsOrder","orderId","get","listOrders","console","log","deleteOrder","delete","deliverOrder","put","_id"],"mappings":"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","sourcesContent":["import Axios from 'axios';\nimport { CART_EMPTY } from '../constants/cartConstants';\nimport {\n  ORDER_CREATE_FAIL,\n  ORDER_CREATE_REQUEST,\n  ORDER_CREATE_SUCCESS,\n  ORDER_DETAILS_FAIL,\n  ORDER_DETAILS_REQUEST,\n  ORDER_DETAILS_SUCCESS,\n  // ORDER_PAY_REQUEST,\n  // ORDER_PAY_FAIL,\n  // ORDER_PAY_SUCCESS,\n  // ORDER_MINE_LIST_REQUEST,\n  // ORDER_MINE_LIST_FAIL,\n  // ORDER_MINE_LIST_SUCCESS,\n  ORDER_LIST_REQUEST,\n  ORDER_LIST_SUCCESS,\n  ORDER_LIST_FAIL,\n  ORDER_DELETE_REQUEST,\n  ORDER_DELETE_SUCCESS,\n  ORDER_DELETE_FAIL,\n  ORDER_DELIVER_REQUEST,\n  ORDER_DELIVER_SUCCESS,\n  ORDER_DELIVER_FAIL,\n  // ORDER_SUMMARY_REQUEST,\n  // ORDER_SUMMARY_SUCCESS,\n} from '../constants/orderConstants';\n\nexport const createOrder = (order) => async (dispatch, getState) => {\n  dispatch({ type: ORDER_CREATE_REQUEST, payload: order });\n  try {\n    // const {\n    //   userSignin: { userInfo },\n    // } = getState();\n    const { data } = await Axios.post('/api/orders', order, {\n      // headers: {\n      //   Authorization: `Bearer ${userInfo.token}`,\n      // },\n    });\n    dispatch({ type: ORDER_CREATE_SUCCESS, payload: data.order });\n    dispatch({ type: CART_EMPTY });\n    localStorage.removeItem('cartItems');\n  } catch (error) {\n    dispatch({\n      type: ORDER_CREATE_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n\nexport const detailsOrder = (orderId) => async (dispatch, getState) => {\n  dispatch({ type: ORDER_DETAILS_REQUEST, payload: orderId });\n  // const {\n  //   userSignin: { userInfo },\n  // } = getState();\n  try {\n    const { data } = await Axios.get(`/api/orders/${orderId}`, {\n      // headers: { Authorization: `Bearer ${userInfo.token}` },\n    });\n    dispatch({ type: ORDER_DETAILS_SUCCESS, payload: data });\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message;\n    dispatch({ type: ORDER_DETAILS_FAIL, payload: message });\n  }\n};\n\n// export const payOrder = (order, paymentResult) => async (\n//   dispatch,\n//   getState\n// ) => {\n//   dispatch({ type: ORDER_PAY_REQUEST, payload: { order, paymentResult } });\n//   const {\n//     userSignin: { userInfo },\n//   } = getState();\n//   try {\n    \n//     const { data } = Axios.put(`/api/orders/${order._id}/pay`, paymentResult, {\n//       headers: { Authorization: `Bearer ${userInfo.token}` },\n//     });\n//     dispatch({ type: ORDER_PAY_SUCCESS, payload: data });\n//   } catch (error) {\n//     const message =\n//       error.response && error.response.data.message\n//         ? error.response.data.message\n//         : error.message;\n//     dispatch({ type: ORDER_PAY_FAIL, payload: message });\n//   }\n// };\n// export const listOrderMine = () => async (dispatch, getState) => {\n//   dispatch({ type: ORDER_MINE_LIST_REQUEST });\n//   // const {\n//   //   userSignin: { userInfo },\n//   // } = getState();\n//   try {\n//     const { data } = await Axios.get('/api/orders/mine', {\n//       // headers: {\n//       //   Authorization: `Bearer ${userInfo.token}`,\n//       // },\n//     });\n//     dispatch({ type: ORDER_MINE_LIST_SUCCESS, payload: data });\n//   } catch (error) {\n//     const message =\n//       error.response && error.response.data.message\n//         ? error.response.data.message\n//         : error.message;\n//     dispatch({ type: ORDER_MINE_LIST_FAIL, payload: message });\n//   }\n// };\nexport const listOrders = () => async (dispatch, getState) => {\n  dispatch({ type: ORDER_LIST_REQUEST });\n  // const {\n  //   userSignin: { userInfo },\n  // } = getState();\n  try {\n    const { data } = await Axios.get(`/api/orders`, {\n      // headers: { Authorization: `Bearer ${userInfo.token}` },\n    });\n    console.log(data);\n    dispatch({ type: ORDER_LIST_SUCCESS, payload: data });\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message;\n    dispatch({ type: ORDER_LIST_FAIL, payload: message });\n  }\n};\nexport const deleteOrder = (orderId) => async (dispatch, getState) => {\n  dispatch({ type: ORDER_DELETE_REQUEST, payload: orderId });\n  // const {\n  //   userSignin: { userInfo },\n  // } = getState();\n  try {\n    const { data } = Axios.delete(`/api/orders/${orderId}`, {\n      // headers: { Authorization: `Bearer ${userInfo.token}` },\n    });\n    dispatch({ type: ORDER_DELETE_SUCCESS, payload: data });\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message;\n    dispatch({ type: ORDER_DELETE_FAIL, payload: message });\n  }\n};\n\n// export const deliverOrder = (orderId) => async (dispatch, getState) => {\n//   dispatch({ type: ORDER_DELIVER_REQUEST, payload: orderId });\n//   // const {\n//   //   userSignin: { userInfo },\n//   // } = getState();\n//   try {\n//     const { data } = Axios.put(\n//       `/api/orders/${orderId}/deliver`,\n//       {}\n//       // {\n//       //   headers: { Authorization: `Bearer ${userInfo.token}` },\n//       // }\n//     );\n//     dispatch({ type: ORDER_DELIVER_SUCCESS, payload: data });\n//   } catch (error) {\n//     const message =\n//       error.response && error.response.data.message\n//         ? error.response.data.message\n//         : error.message;\n//     dispatch({ type: ORDER_DELIVER_FAIL, payload: message });\n//   }\n// };\n\n// export const summaryOrder = () => async (dispatch, getState) => {\n//   dispatch({ type: ORDER_SUMMARY_REQUEST });\n//   const {\n//     userSignin: { userInfo },\n//   } = getState();\n//   try {\n//     const { data } = await Axios.get('/api/orders/summary', {\n//       headers: { Authorization: `Bearer ${userInfo.token}` },\n//     });\n//     dispatch({ type: ORDER_SUMMARY_SUCCESS, payload: data });\n//   } catch (error) {\n//     dispatch({\n//       type: ORDER_CREATE_FAIL,\n//       payload:\n//         error.response && error.response.data.message\n//           ? error.response.data.message\n//           : error.message,\n//     });\n//   }\n// };\nexport const deliverOrder = (order) => async (dispatch, getState) => {\n  dispatch({ type: ORDER_DELIVER_REQUEST, payload: order });\n  // const {\n  //   userSignin: { userInfo },\n  // } = getState();\n  try {\n    const { data } = await Axios.put(\n      `/api/orders/${order._id}`,order,\n      {}\n      // {\n      //   headers: { Authorization: `Bearer ${userInfo.token}` },\n      // }\n    );\n    dispatch({ type: ORDER_DELIVER_SUCCESS, payload: data });\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message;\n    dispatch({ type: ORDER_DELIVER_FAIL, payload: message });\n  }\n};\n"]},"metadata":{},"sourceType":"module"}