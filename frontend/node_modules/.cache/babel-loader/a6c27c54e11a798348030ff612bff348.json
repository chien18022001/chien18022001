{"ast":null,"code":"// import Axios from 'axios';\n// import {\n//   USER_DETAILS_FAIL,\n//   USER_DETAILS_REQUEST,\n//   USER_DETAILS_SUCCESS,\n//   USER_REGISTER_FAIL,\n//   USER_REGISTER_REQUEST,\n//   USER_REGISTER_SUCCESS,\n//   USER_SIGNIN_FAIL,\n//   USER_SIGNIN_REQUEST,\n//   USER_SIGNIN_SUCCESS,\n//   USER_SIGNOUT,\n//   USER_UPDATE_PROFILE_FAIL,\n//   USER_UPDATE_PROFILE_REQUEST,\n//   USER_UPDATE_PROFILE_SUCCESS,\n//   USER_LIST_REQUEST,\n//   USER_LIST_SUCCESS,\n//   USER_LIST_FAIL,\n//   USER_DELETE_REQUEST,\n//   USER_DELETE_SUCCESS,\n//   USER_DELETE_FAIL,\n//   USER_UPDATE_SUCCESS,\n//   USER_UPDATE_FAIL,\n//   USER_TOPSELLERS_LIST_REQUEST,\n//   USER_TOPSELLERS_LIST_SUCCESS,\n//   USER_TOPSELLERS_LIST_FAIL,\n// } from '../constants/userConstants';\n// export const register = (name, email, password) => async (dispatch) => {\n//   dispatch({ type: USER_REGISTER_REQUEST, payload: { email, password } });\n//   try {\n//     const { data } = await Axios.post('/api/users/register', {\n//       name,\n//       email,\n//       password,\n//     });\n//     dispatch({ type: USER_REGISTER_SUCCESS, payload: data });\n//     dispatch({ type: USER_SIGNIN_SUCCESS, payload: data });\n//     localStorage.setItem('userInfo', JSON.stringify(data));\n//   } catch (error) {\n//     dispatch({\n//       type: USER_REGISTER_FAIL,\n//       payload:\n//         error.response && error.response.data.message\n//           ? error.response.data.message\n//           : error.message,\n//     });\n//   }\n// };\n// export const signin = (email, password) => async (dispatch) => {\n//   dispatch({ type: USER_SIGNIN_REQUEST, payload: { email, password } });\n//   try {\n//     const { data } = await Axios.post('/api/users/signin', { email, password });\n//     dispatch({ type: USER_SIGNIN_SUCCESS, payload: data });\n//     localStorage.setItem('userInfo', JSON.stringify(data));\n//   } catch (error) {\n//     dispatch({\n//       type: USER_SIGNIN_FAIL,\n//       payload:\n//         error.response && error.response.data.message\n//           ? error.response.data.message\n//           : error.message,\n//     });\n//   }\n// };\n// export const signout = () => (dispatch) => {\n//   localStorage.removeItem('userInfo');\n//   localStorage.removeItem('cartItems');\n//   localStorage.removeItem('shippingAddress');\n//   dispatch({ type: USER_SIGNOUT });\n//   document.location.href = '/signin';\n// };\n// export const detailsUser = (userId) => async (dispatch, getState) => {\n//   dispatch({ type: USER_DETAILS_REQUEST, payload: userId });\n//   const {\n//     userSignin: { userInfo },\n//   } = getState();\n//   try {\n//     const { data } = await Axios.get(`/api/users/${userId}`, {\n//       headers: { Authorization: `Bearer ${userInfo?.token}` },\n//     });\n//     dispatch({ type: USER_DETAILS_SUCCESS, payload: data });\n//   } catch (error) {\n//     const message =\n//       error.response && error.response.data.message\n//         ? error.response.data.message\n//         : error.message;\n//     dispatch({ type: USER_DETAILS_FAIL, payload: message });\n//   }\n// };\n// export const updateUserProfile = (user) => async (dispatch, getState) => {\n//   dispatch({ type: USER_UPDATE_PROFILE_REQUEST, payload: user });\n//   const {\n//     userSignin: { userInfo },\n//   } = getState();\n//   try {\n//     const { data } = await Axios.put(`/api/users/profile`, user, {\n//       headers: { Authorization: `Bearer ${userInfo.token}` },\n//     });\n//     dispatch({ type: USER_UPDATE_PROFILE_SUCCESS, payload: data });\n//     dispatch({ type: USER_SIGNIN_SUCCESS, payload: data });\n//     localStorage.setItem('userInfo', JSON.stringify(data));\n//   } catch (error) {\n//     const message =\n//       error.response && error.response.data.message\n//         ? error.response.data.message\n//         : error.message;\n//     dispatch({ type: USER_UPDATE_PROFILE_FAIL, payload: message });\n//   }\n// };\n// export const updateUser = (user) => async (dispatch, getState) => {\n//   dispatch({ type: USER_UPDATE_PROFILE_REQUEST, payload: user });\n//   const {\n//     userSignin: { userInfo },\n//   } = getState();\n//   try {\n//     const { data } = await Axios.put(`/api/users/${user._id}`, user, {\n//       headers: { Authorization: `Bearer ${userInfo.token}` },\n//     });\n//     dispatch({ type: USER_UPDATE_SUCCESS, payload: data });\n//   } catch (error) {\n//     const message =\n//       error.response && error.response.data.message\n//         ? error.response.data.message\n//         : error.message;\n//     dispatch({ type: USER_UPDATE_FAIL, payload: message });\n//   }\n// };\n// export const listUsers = () => async (dispatch, getState) => {\n//   dispatch({ type: USER_LIST_REQUEST });\n//   try {\n//     const {\n//       userSignin: { userInfo },\n//     } = getState();\n//     const { data } = await Axios.get('/api/users', {\n//       headers: {\n//         Authorization: `Bearer ${userInfo.token}`,\n//       },\n//     });\n//     dispatch({ type: USER_LIST_SUCCESS, payload: data });\n//   } catch (error) {\n//     const message =\n//       error.response && error.response.data.message\n//         ? error.response.data.message\n//         : error.message;\n//     dispatch({ type: USER_LIST_FAIL, payload: message });\n//   }\n// };\n// export const deleteUser = (userId) => async (dispatch, getState) => {\n//   dispatch({ type: USER_DELETE_REQUEST, payload: userId });\n//   const {\n//     userSignin: { userInfo },\n//   } = getState();\n//   try {\n//     const { data } = await Axios.delete(`/api/users/${userId}`, {\n//       headers: { Authorization: `Bearer ${userInfo.token}` },\n//     });\n//     dispatch({ type: USER_DELETE_SUCCESS, payload: data });\n//   } catch (error) {\n//     const message =\n//       error.response && error.response.data.message\n//         ? error.response.data.message\n//         : error.message;\n//     dispatch({ type: USER_DELETE_FAIL, payload: message });\n//   }\n// };\n// export const listTopSellers = () => async (dispatch) => {\n//   dispatch({ type: USER_TOPSELLERS_LIST_REQUEST });\n//   try {\n//     const { data } = await Axios.get('/api/users/top-sellers');\n//     dispatch({ type: USER_TOPSELLERS_LIST_SUCCESS, payload: data });\n//   } catch (error) {\n//     const message =\n//       error.response && error.response.data.message\n//         ? error.response.data.message\n//         : error.message;\n//     dispatch({ type: USER_TOPSELLERS_LIST_FAIL, payload: message });\n//   }\n// };","map":{"version":3,"sources":["C:/Users/84925/Downloads/amazona-master/amazona-master/frontend/src/actions/userActions.js"],"names":[],"mappingssourcesContent":["// import Axios from 'axios';\n// import {\n//   USER_DETAILS_FAIL,\n//   USER_DETAILS_REQUEST,\n//   USER_DETAILS_SUCCESS,\n//   USER_REGISTER_FAIL,\n//   USER_REGISTER_REQUEST,\n//   USER_REGISTER_SUCCESS,\n//   USER_SIGNIN_FAIL,\n//   USER_SIGNIN_REQUEST,\n//   USER_SIGNIN_SUCCESS,\n//   USER_SIGNOUT,\n//   USER_UPDATE_PROFILE_FAIL,\n//   USER_UPDATE_PROFILE_REQUEST,\n//   USER_UPDATE_PROFILE_SUCCESS,\n//   USER_LIST_REQUEST,\n//   USER_LIST_SUCCESS,\n//   USER_LIST_FAIL,\n//   USER_DELETE_REQUEST,\n//   USER_DELETE_SUCCESS,\n//   USER_DELETE_FAIL,\n//   USER_UPDATE_SUCCESS,\n//   USER_UPDATE_FAIL,\n//   USER_TOPSELLERS_LIST_REQUEST,\n//   USER_TOPSELLERS_LIST_SUCCESS,\n//   USER_TOPSELLERS_LIST_FAIL,\n// } from '../constants/userConstants';\n\n// export const register = (name, email, password) => async (dispatch) => {\n//   dispatch({ type: USER_REGISTER_REQUEST, payload: { email, password } });\n//   try {\n//     const { data } = await Axios.post('/api/users/register', {\n//       name,\n//       email,\n//       password,\n//     });\n//     dispatch({ type: USER_REGISTER_SUCCESS, payload: data });\n//     dispatch({ type: USER_SIGNIN_SUCCESS, payload: data });\n//     localStorage.setItem('userInfo', JSON.stringify(data));\n//   } catch (error) {\n//     dispatch({\n//       type: USER_REGISTER_FAIL,\n//       payload:\n//         error.response && error.response.data.message\n//           ? error.response.data.message\n//           : error.message,\n//     });\n//   }\n// };\n\n// export const signin = (email, password) => async (dispatch) => {\n//   dispatch({ type: USER_SIGNIN_REQUEST, payload: { email, password } });\n//   try {\n//     const { data } = await Axios.post('/api/users/signin', { email, password });\n//     dispatch({ type: USER_SIGNIN_SUCCESS, payload: data });\n//     localStorage.setItem('userInfo', JSON.stringify(data));\n//   } catch (error) {\n//     dispatch({\n//       type: USER_SIGNIN_FAIL,\n//       payload:\n//         error.response && error.response.data.message\n//           ? error.response.data.message\n//           : error.message,\n//     });\n//   }\n// };\n\n// export const signout = () => (dispatch) => {\n//   localStorage.removeItem('userInfo');\n//   localStorage.removeItem('cartItems');\n//   localStorage.removeItem('shippingAddress');\n//   dispatch({ type: USER_SIGNOUT });\n//   document.location.href = '/signin';\n// };\n// export const detailsUser = (userId) => async (dispatch, getState) => {\n//   dispatch({ type: USER_DETAILS_REQUEST, payload: userId });\n//   const {\n//     userSignin: { userInfo },\n//   } = getState();\n//   try {\n//     const { data } = await Axios.get(`/api/users/${userId}`, {\n//       headers: { Authorization: `Bearer ${userInfo?.token}` },\n//     });\n//     dispatch({ type: USER_DETAILS_SUCCESS, payload: data });\n//   } catch (error) {\n//     const message =\n//       error.response && error.response.data.message\n//         ? error.response.data.message\n//         : error.message;\n//     dispatch({ type: USER_DETAILS_FAIL, payload: message });\n//   }\n// };\n// export const updateUserProfile = (user) => async (dispatch, getState) => {\n//   dispatch({ type: USER_UPDATE_PROFILE_REQUEST, payload: user });\n//   const {\n//     userSignin: { userInfo },\n//   } = getState();\n//   try {\n//     const { data } = await Axios.put(`/api/users/profile`, user, {\n//       headers: { Authorization: `Bearer ${userInfo.token}` },\n//     });\n//     dispatch({ type: USER_UPDATE_PROFILE_SUCCESS, payload: data });\n//     dispatch({ type: USER_SIGNIN_SUCCESS, payload: data });\n//     localStorage.setItem('userInfo', JSON.stringify(data));\n//   } catch (error) {\n//     const message =\n//       error.response && error.response.data.message\n//         ? error.response.data.message\n//         : error.message;\n//     dispatch({ type: USER_UPDATE_PROFILE_FAIL, payload: message });\n//   }\n// };\n// export const updateUser = (user) => async (dispatch, getState) => {\n//   dispatch({ type: USER_UPDATE_PROFILE_REQUEST, payload: user });\n//   const {\n//     userSignin: { userInfo },\n//   } = getState();\n//   try {\n//     const { data } = await Axios.put(`/api/users/${user._id}`, user, {\n//       headers: { Authorization: `Bearer ${userInfo.token}` },\n//     });\n//     dispatch({ type: USER_UPDATE_SUCCESS, payload: data });\n//   } catch (error) {\n//     const message =\n//       error.response && error.response.data.message\n//         ? error.response.data.message\n//         : error.message;\n//     dispatch({ type: USER_UPDATE_FAIL, payload: message });\n//   }\n// };\n// export const listUsers = () => async (dispatch, getState) => {\n//   dispatch({ type: USER_LIST_REQUEST });\n//   try {\n//     const {\n//       userSignin: { userInfo },\n//     } = getState();\n//     const { data } = await Axios.get('/api/users', {\n//       headers: {\n//         Authorization: `Bearer ${userInfo.token}`,\n//       },\n//     });\n//     dispatch({ type: USER_LIST_SUCCESS, payload: data });\n//   } catch (error) {\n//     const message =\n//       error.response && error.response.data.message\n//         ? error.response.data.message\n//         : error.message;\n//     dispatch({ type: USER_LIST_FAIL, payload: message });\n//   }\n// };\n// export const deleteUser = (userId) => async (dispatch, getState) => {\n//   dispatch({ type: USER_DELETE_REQUEST, payload: userId });\n//   const {\n//     userSignin: { userInfo },\n//   } = getState();\n//   try {\n//     const { data } = await Axios.delete(`/api/users/${userId}`, {\n//       headers: { Authorization: `Bearer ${userInfo.token}` },\n//     });\n//     dispatch({ type: USER_DELETE_SUCCESS, payload: data });\n//   } catch (error) {\n//     const message =\n//       error.response && error.response.data.message\n//         ? error.response.data.message\n//         : error.message;\n//     dispatch({ type: USER_DELETE_FAIL, payload: message });\n//   }\n// };\n// export const listTopSellers = () => async (dispatch) => {\n//   dispatch({ type: USER_TOPSELLERS_LIST_REQUEST });\n//   try {\n//     const { data } = await Axios.get('/api/users/top-sellers');\n//     dispatch({ type: USER_TOPSELLERS_LIST_SUCCESS, payload: data });\n//   } catch (error) {\n//     const message =\n//       error.response && error.response.data.message\n//         ? error.response.data.message\n//         : error.message;\n//     dispatch({ type: USER_TOPSELLERS_LIST_FAIL, payload: message });\n//   }\n// };\n"]},"metadata":{},"sourceType":"module"}