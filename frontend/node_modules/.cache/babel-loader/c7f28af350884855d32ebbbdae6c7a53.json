{"ast":null,"code":"// import React from 'react';\n// import { useEffect } from 'react';\n// import { useState } from 'react';\n// import { useDispatch, useSelector } from 'react-redux';\n// // import { detailsUser, updateUser } from '../actions/userActions';\n// import LoadingBox from '../components/LoadingBox';\n// import MessageBox from '../components/MessageBox';\n// // import { USER_UPDATE_RESET } from '../constants/userConstants';\n// export default function UserEditScreen(props) {\n//   // const userId = props.match.params.id;\n//   const [name, setName] = useState('');\n//   const [email, setEmail] = useState('');\n//   // const [isSeller, setIsSeller] = useState(false);\n//   // const [isAdmin, setIsAdmin] = useState(false);\n//   const userDetails = useSelector((state) => state.userDetails);\n//   const { loading, error, user } = userDetails;\n//   const userUpdate = useSelector((state) => state.userUpdate);\n//   const {\n//     loading: loadingUpdate,\n//     error: errorUpdate,\n//     success: successUpdate,\n//   } = userUpdate;\n//   const dispatch = useDispatch();\n//   useEffect(() => {\n//     if (successUpdate) {\n//       dispatch({ type: USER_UPDATE_RESET });\n//       props.history.push('/userlist');\n//     }\n//     if (!user) {\n//       dispatch(detailsUser(userId));\n//     } else {\n//       setName(user.name);\n//       setEmail(user.email);\n//       // setIsSeller(user.isSeller);\n//       // setIsAdmin(user.isAdmin);\n//     }\n//   }, [dispatch, props.history, successUpdate, user, userId]);\n//   const submitHandler = (e) => {\n//     e.preventDefault();\n//     // dispatch update user\n//     dispatch(updateUser({ _id: userId, name, email}));\n//   };\n//   return (\n//     <div>\n//       <form className=\"form\" onSubmit={submitHandler}>\n//         <div>\n//           <h1>Edit User {name}</h1>\n//           {loadingUpdate && <LoadingBox></LoadingBox>}\n//           {errorUpdate && (\n//             <MessageBox variant=\"danger\">{errorUpdate}</MessageBox>\n//           )}\n//         </div>\n//         {loading ? (\n//           <LoadingBox />\n//         ) : error ? (\n//           <MessageBox variant=\"danger\">{error}</MessageBox>\n//         ) : (\n//           <>\n//             <div>\n//               <label htmlFor=\"name\">Name</label>\n//               <input\n//                 id=\"name\"\n//                 type=\"text\"\n//                 placeholder=\"Enter name\"\n//                 value={name}\n//                 onChange={(e) => setName(e.target.value)}\n//               ></input>\n//             </div>\n//             <div>\n//               <label htmlFor=\"email\">Email</label>\n//               <input\n//                 id=\"email\"\n//                 type=\"email\"\n//                 placeholder=\"Enter email\"\n//                 value={email}\n//                 onChange={(e) => setEmail(e.target.value)}\n//               ></input>\n//             </div>\n//             {/* <div>\n//               <label htmlFor=\"isSeller\">Is Seller</label>\n//               <input\n//                 id=\"isSeller\"\n//                 type=\"checkbox\"\n//                 checked={isSeller}\n//                 onChange={(e) => setIsSeller(e.target.checked)}\n//               ></input>\n//             </div> */}\n//             {/* <div>\n//               <label htmlFor=\"isAdmin\">Is Admin</label>\n//               <input\n//                 id=\"isAdmin\"\n//                 type=\"checkbox\"\n//                 checked={isAdmin}\n//                 onChange={(e) => setIsAdmin(e.target.checked)}\n//               ></input>\n//             </div> */}\n//             <div>\n//               <button type=\"submit\" className=\"primary\">\n//                 Update\n//               </button>\n//             </div>\n//           </>\n//         )}\n//       </form>\n//     </div>\n//   );\n// }","map":{"version":3,"sources":["D:/duantotnghiep/frontend/src/screens/UserEditScreen.js"],"names":[],"mappingssourcesContent":["// import React from 'react';\n// import { useEffect } from 'react';\n// import { useState } from 'react';\n// import { useDispatch, useSelector } from 'react-redux';\n// // import { detailsUser, updateUser } from '../actions/userActions';\n// import LoadingBox from '../components/LoadingBox';\n// import MessageBox from '../components/MessageBox';\n// // import { USER_UPDATE_RESET } from '../constants/userConstants';\n\n// export default function UserEditScreen(props) {\n//   // const userId = props.match.params.id;\n//   const [name, setName] = useState('');\n//   const [email, setEmail] = useState('');\n//   // const [isSeller, setIsSeller] = useState(false);\n//   // const [isAdmin, setIsAdmin] = useState(false);\n\n//   const userDetails = useSelector((state) => state.userDetails);\n//   const { loading, error, user } = userDetails;\n\n//   const userUpdate = useSelector((state) => state.userUpdate);\n//   const {\n//     loading: loadingUpdate,\n//     error: errorUpdate,\n//     success: successUpdate,\n//   } = userUpdate;\n\n//   const dispatch = useDispatch();\n//   useEffect(() => {\n//     if (successUpdate) {\n//       dispatch({ type: USER_UPDATE_RESET });\n//       props.history.push('/userlist');\n//     }\n//     if (!user) {\n//       dispatch(detailsUser(userId));\n//     } else {\n//       setName(user.name);\n//       setEmail(user.email);\n//       // setIsSeller(user.isSeller);\n//       // setIsAdmin(user.isAdmin);\n//     }\n//   }, [dispatch, props.history, successUpdate, user, userId]);\n\n//   const submitHandler = (e) => {\n//     e.preventDefault();\n//     // dispatch update user\n//     dispatch(updateUser({ _id: userId, name, email}));\n//   };\n//   return (\n//     <div>\n//       <form className=\"form\" onSubmit={submitHandler}>\n//         <div>\n//           <h1>Edit User {name}</h1>\n//           {loadingUpdate && <LoadingBox></LoadingBox>}\n//           {errorUpdate && (\n//             <MessageBox variant=\"danger\">{errorUpdate}</MessageBox>\n//           )}\n//         </div>\n//         {loading ? (\n//           <LoadingBox />\n//         ) : error ? (\n//           <MessageBox variant=\"danger\">{error}</MessageBox>\n//         ) : (\n//           <>\n//             <div>\n//               <label htmlFor=\"name\">Name</label>\n//               <input\n//                 id=\"name\"\n//                 type=\"text\"\n//                 placeholder=\"Enter name\"\n//                 value={name}\n//                 onChange={(e) => setName(e.target.value)}\n//               ></input>\n//             </div>\n//             <div>\n//               <label htmlFor=\"email\">Email</label>\n//               <input\n//                 id=\"email\"\n//                 type=\"email\"\n//                 placeholder=\"Enter email\"\n//                 value={email}\n//                 onChange={(e) => setEmail(e.target.value)}\n//               ></input>\n//             </div>\n//             {/* <div>\n//               <label htmlFor=\"isSeller\">Is Seller</label>\n//               <input\n//                 id=\"isSeller\"\n//                 type=\"checkbox\"\n//                 checked={isSeller}\n//                 onChange={(e) => setIsSeller(e.target.checked)}\n//               ></input>\n//             </div> */}\n//             {/* <div>\n//               <label htmlFor=\"isAdmin\">Is Admin</label>\n//               <input\n//                 id=\"isAdmin\"\n//                 type=\"checkbox\"\n//                 checked={isAdmin}\n//                 onChange={(e) => setIsAdmin(e.target.checked)}\n//               ></input>\n//             </div> */}\n//             <div>\n//               <button type=\"submit\" className=\"primary\">\n//                 Update\n//               </button>\n//             </div>\n//           </>\n//         )}\n//       </form>\n//     </div>\n//   );\n// }\n"]},"metadata":{},"sourceType":"module"}