{"ast":null,"code":"import Axios from 'axios';\nimport { CART_EMPTY } from '../constants/cartConstants';\nimport { ORDER_CREATE_FAIL, ORDER_CREATE_REQUEST, ORDER_CREATE_SUCCESS, ORDER_DETAILS_FAIL, ORDER_DETAILS_REQUEST, ORDER_DETAILS_SUCCESS, ORDER_PAY_REQUEST, ORDER_PAY_FAIL, ORDER_PAY_SUCCESS, ORDER_MINE_LIST_REQUEST, ORDER_MINE_LIST_FAIL, ORDER_MINE_LIST_SUCCESS, ORDER_LIST_REQUEST, ORDER_LIST_SUCCESS, ORDER_LIST_FAIL, ORDER_DELETE_REQUEST, ORDER_DELETE_SUCCESS, ORDER_DELETE_FAIL, ORDER_DELIVER_REQUEST, ORDER_DELIVER_SUCCESS, ORDER_DELIVER_FAIL, ORDER_SUMMARY_REQUEST, ORDER_SUMMARY_SUCCESS } from '../constants/orderConstants';\nexport const createOrder = order => async (dispatch, getState) => {\n  dispatch({\n    type: ORDER_CREATE_REQUEST,\n    payload: order\n  });\n\n  try {\n    // const {\n    //   userSignin: { userInfo },\n    // } = getState();\n    const {\n      data\n    } = await Axios.post('/api/orders', order, {// headers: {\n      //   Authorization: `Bearer ${userInfo.token}`,\n      // },\n    });\n    dispatch({\n      type: ORDER_CREATE_SUCCESS,\n      payload: data.order\n    });\n    dispatch({\n      type: CART_EMPTY\n    });\n    localStorage.removeItem('cartItems');\n  } catch (error) {\n    dispatch({\n      type: ORDER_CREATE_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const detailsOrder = orderId => async (dispatch, getState) => {\n  dispatch({\n    type: ORDER_DETAILS_REQUEST,\n    payload: orderId\n  }); // const {\n  //   userSignin: { userInfo },\n  // } = getState();\n\n  try {\n    const {\n      data\n    } = await Axios.get(`/api/orders/${orderId}`, {// headers: { Authorization: `Bearer ${userInfo.token}` },\n    });\n    dispatch({\n      type: ORDER_DETAILS_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\n    dispatch({\n      type: ORDER_DETAILS_FAIL,\n      payload: message\n    });\n  }\n};\nexport const payOrder = (order, paymentResult) => async (dispatch, getState) => {\n  dispatch({\n    type: ORDER_PAY_REQUEST,\n    payload: {\n      order,\n      paymentResult\n    }\n  });\n  const {\n    userSignin: {\n      userInfo\n    }\n  } = getState();\n\n  try {\n    const {\n      data\n    } = Axios.put(`/api/orders/${order._id}/pay`, paymentResult, {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    });\n    dispatch({\n      type: ORDER_PAY_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\n    dispatch({\n      type: ORDER_PAY_FAIL,\n      payload: message\n    });\n  }\n};\nexport const listOrderMine = () => async (dispatch, getState) => {\n  dispatch({\n    type: ORDER_MINE_LIST_REQUEST\n  }); // const {\n  //   userSignin: { userInfo },\n  // } = getState();\n\n  try {\n    const {\n      data\n    } = await Axios.get('/api/orders/mine', {// headers: {\n      //   Authorization: `Bearer ${userInfo.token}`,\n      // },\n    });\n    dispatch({\n      type: ORDER_MINE_LIST_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\n    dispatch({\n      type: ORDER_MINE_LIST_FAIL,\n      payload: message\n    });\n  }\n};\nexport const listOrders = ({\n  seller = ''\n}) => async (dispatch, getState) => {\n  dispatch({\n    type: ORDER_LIST_REQUEST\n  }); // const {\n  //   userSignin: { userInfo },\n  // } = getState();\n\n  try {\n    const {\n      data\n    } = await Axios.get(`/api/orders?seller=${seller}`, {// headers: { Authorization: `Bearer ${userInfo.token}` },\n    });\n    console.log(data);\n    dispatch({\n      type: ORDER_LIST_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\n    dispatch({\n      type: ORDER_LIST_FAIL,\n      payload: message\n    });\n  }\n};\nexport const deleteOrder = orderId => async (dispatch, getState) => {\n  dispatch({\n    type: ORDER_DELETE_REQUEST,\n    payload: orderId\n  }); // const {\n  //   userSignin: { userInfo },\n  // } = getState();\n\n  try {\n    const {\n      data\n    } = Axios.delete(`/api/orders/${orderId}`, {// headers: { Authorization: `Bearer ${userInfo.token}` },\n    });\n    dispatch({\n      type: ORDER_DELETE_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\n    dispatch({\n      type: ORDER_DELETE_FAIL,\n      payload: message\n    });\n  }\n};\nexport const deliverOrder = orderId => async (dispatch, getState) => {\n  dispatch({\n    type: ORDER_DELIVER_REQUEST,\n    payload: orderId\n  }); // const {\n  //   userSignin: { userInfo },\n  // } = getState();\n\n  try {\n    const {\n      data\n    } = Axios.put(`/api/orders/${orderId}/deliver`, {} // {\n    //   headers: { Authorization: `Bearer ${userInfo.token}` },\n    // }\n    );\n    dispatch({\n      type: ORDER_DELIVER_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\n    dispatch({\n      type: ORDER_DELIVER_FAIL,\n      payload: message\n    });\n  }\n};\nexport const summaryOrder = () => async (dispatch, getState) => {\n  dispatch({\n    type: ORDER_SUMMARY_REQUEST\n  });\n  const {\n    userSignin: {\n      userInfo\n    }\n  } = getState();\n\n  try {\n    const {\n      data\n    } = await Axios.get('/api/orders/summary', {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    });\n    dispatch({\n      type: ORDER_SUMMARY_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: ORDER_CREATE_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};","map":{"version":3,"sources":["C:/Users/84925/Downloads/amazona-master/amazona-master/frontend/src/actions/orderActions.js"],"names":["Axios","CART_EMPTY","ORDER_CREATE_FAIL","ORDER_CREATE_REQUEST","ORDER_CREATE_SUCCESS","ORDER_DETAILS_FAIL","ORDER_DETAILS_REQUEST","ORDER_DETAILS_SUCCESS","ORDER_PAY_REQUEST","ORDER_PAY_FAIL","ORDER_PAY_SUCCESS","ORDER_MINE_LIST_REQUEST","ORDER_MINE_LIST_FAIL","ORDER_MINE_LIST_SUCCESS","ORDER_LIST_REQUEST","ORDER_LIST_SUCCESS","ORDER_LIST_FAIL","ORDER_DELETE_REQUEST","ORDER_DELETE_SUCCESS","ORDER_DELETE_FAIL","ORDER_DELIVER_REQUEST","ORDER_DELIVER_SUCCESS","ORDER_DELIVER_FAIL","ORDER_SUMMARY_REQUEST","ORDER_SUMMARY_SUCCESS","createOrder","order","dispatch","getState","type","payload","data","post","localStorage","removeItem","error","response","message","detailsOrder","orderId","get","payOrder","paymentResult","userSignin","userInfo","put","_id","headers","Authorization","token","listOrderMine","listOrders","seller","console","log","deleteOrder","delete","deliverOrder","summaryOrder"],"mappings":"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","sourcesContent":["import Axios from 'axios';\nimport { CART_EMPTY } from '../constants/cartConstants';\nimport {\n  ORDER_CREATE_FAIL,\n  ORDER_CREATE_REQUEST,\n  ORDER_CREATE_SUCCESS,\n  ORDER_DETAILS_FAIL,\n  ORDER_DETAILS_REQUEST,\n  ORDER_DETAILS_SUCCESS,\n  ORDER_PAY_REQUEST,\n  ORDER_PAY_FAIL,\n  ORDER_PAY_SUCCESS,\n  ORDER_MINE_LIST_REQUEST,\n  ORDER_MINE_LIST_FAIL,\n  ORDER_MINE_LIST_SUCCESS,\n  ORDER_LIST_REQUEST,\n  ORDER_LIST_SUCCESS,\n  ORDER_LIST_FAIL,\n  ORDER_DELETE_REQUEST,\n  ORDER_DELETE_SUCCESS,\n  ORDER_DELETE_FAIL,\n  ORDER_DELIVER_REQUEST,\n  ORDER_DELIVER_SUCCESS,\n  ORDER_DELIVER_FAIL,\n  ORDER_SUMMARY_REQUEST,\n  ORDER_SUMMARY_SUCCESS,\n} from '../constants/orderConstants';\n\nexport const createOrder = (order) => async (dispatch, getState) => {\n  dispatch({ type: ORDER_CREATE_REQUEST, payload: order });\n  try {\n    // const {\n    //   userSignin: { userInfo },\n    // } = getState();\n    const { data } = await Axios.post('/api/orders', order, {\n      // headers: {\n      //   Authorization: `Bearer ${userInfo.token}`,\n      // },\n    });\n    dispatch({ type: ORDER_CREATE_SUCCESS, payload: data.order });\n    dispatch({ type: CART_EMPTY });\n    localStorage.removeItem('cartItems');\n  } catch (error) {\n    dispatch({\n      type: ORDER_CREATE_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n\nexport const detailsOrder = (orderId) => async (dispatch, getState) => {\n  dispatch({ type: ORDER_DETAILS_REQUEST, payload: orderId });\n  // const {\n  //   userSignin: { userInfo },\n  // } = getState();\n  try {\n    const { data } = await Axios.get(`/api/orders/${orderId}`, {\n      // headers: { Authorization: `Bearer ${userInfo.token}` },\n    });\n    dispatch({ type: ORDER_DETAILS_SUCCESS, payload: data });\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message;\n    dispatch({ type: ORDER_DETAILS_FAIL, payload: message });\n  }\n};\n\nexport const payOrder = (order, paymentResult) => async (\n  dispatch,\n  getState\n) => {\n  dispatch({ type: ORDER_PAY_REQUEST, payload: { order, paymentResult } });\n  const {\n    userSignin: { userInfo },\n  } = getState();\n  try {\n    \n    const { data } = Axios.put(`/api/orders/${order._id}/pay`, paymentResult, {\n      headers: { Authorization: `Bearer ${userInfo.token}` },\n    });\n    dispatch({ type: ORDER_PAY_SUCCESS, payload: data });\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message;\n    dispatch({ type: ORDER_PAY_FAIL, payload: message });\n  }\n};\nexport const listOrderMine = () => async (dispatch, getState) => {\n  dispatch({ type: ORDER_MINE_LIST_REQUEST });\n  // const {\n  //   userSignin: { userInfo },\n  // } = getState();\n  try {\n    const { data } = await Axios.get('/api/orders/mine', {\n      // headers: {\n      //   Authorization: `Bearer ${userInfo.token}`,\n      // },\n    });\n    dispatch({ type: ORDER_MINE_LIST_SUCCESS, payload: data });\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message;\n    dispatch({ type: ORDER_MINE_LIST_FAIL, payload: message });\n  }\n};\nexport const listOrders = ({ seller = '' }) => async (dispatch, getState) => {\n  dispatch({ type: ORDER_LIST_REQUEST });\n  // const {\n  //   userSignin: { userInfo },\n  // } = getState();\n  try {\n    const { data } = await Axios.get(`/api/orders?seller=${seller}`, {\n      // headers: { Authorization: `Bearer ${userInfo.token}` },\n    });\n    console.log(data);\n    dispatch({ type: ORDER_LIST_SUCCESS, payload: data });\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message;\n    dispatch({ type: ORDER_LIST_FAIL, payload: message });\n  }\n};\nexport const deleteOrder = (orderId) => async (dispatch, getState) => {\n  dispatch({ type: ORDER_DELETE_REQUEST, payload: orderId });\n  // const {\n  //   userSignin: { userInfo },\n  // } = getState();\n  try {\n    const { data } = Axios.delete(`/api/orders/${orderId}`, {\n      // headers: { Authorization: `Bearer ${userInfo.token}` },\n    });\n    dispatch({ type: ORDER_DELETE_SUCCESS, payload: data });\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message;\n    dispatch({ type: ORDER_DELETE_FAIL, payload: message });\n  }\n};\n\nexport const deliverOrder = (orderId) => async (dispatch, getState) => {\n  dispatch({ type: ORDER_DELIVER_REQUEST, payload: orderId });\n  // const {\n  //   userSignin: { userInfo },\n  // } = getState();\n  try {\n    const { data } = Axios.put(\n      `/api/orders/${orderId}/deliver`,\n      {}\n      // {\n      //   headers: { Authorization: `Bearer ${userInfo.token}` },\n      // }\n    );\n    dispatch({ type: ORDER_DELIVER_SUCCESS, payload: data });\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message;\n    dispatch({ type: ORDER_DELIVER_FAIL, payload: message });\n  }\n};\n\nexport const summaryOrder = () => async (dispatch, getState) => {\n  dispatch({ type: ORDER_SUMMARY_REQUEST });\n  const {\n    userSignin: { userInfo },\n  } = getState();\n  try {\n    const { data } = await Axios.get('/api/orders/summary', {\n      headers: { Authorization: `Bearer ${userInfo.token}` },\n    });\n    dispatch({ type: ORDER_SUMMARY_SUCCESS, payload: data });\n  } catch (error) {\n    dispatch({\n      type: ORDER_CREATE_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n"]},"metadata":{},"sourceType":"module"}