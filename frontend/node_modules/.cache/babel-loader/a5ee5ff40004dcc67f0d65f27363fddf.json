{"ast":null,"code":"// import React, { useEffect } from 'react';\n// import { useDispatch, useSelector } from 'react-redux';\n// import { deleteUser, listUsers } from '../actions/userActions';\n// import LoadingBox from '../components/LoadingBox';\n// import MessageBox from '../components/MessageBox';\n// import { USER_DETAILS_RESET } from '../constants/userConstants';\n// export default function UserListScreen(props) {\n//   const userList = useSelector((state) => state.userList);\n//   const { loading, error, users } = userList;\n//   const userDelete = useSelector((state) => state.userDelete);\n//   const {\n//     loading: loadingDelete,\n//     error: errorDelete,\n//     success: successDelete,\n//   } = userDelete;\n//   const dispatch = useDispatch();\n//   useEffect(() => {\n//     dispatch(listUsers());\n//     dispatch({\n//       type: USER_DETAILS_RESET,\n//     });\n//   }, [dispatch, successDelete]);\n//   const deleteHandler = (user) => {\n//     if (window.confirm('Are you sure?')) {\n//       dispatch(deleteUser(user._id));\n//     }\n//   };\n//   return (\n//     <div>\n//       <h1>Users</h1>\n//       {loadingDelete && <LoadingBox></LoadingBox>}\n//       {errorDelete && <MessageBox variant=\"danger\">{errorDelete}</MessageBox>}\n//       {successDelete && (\n//         <MessageBox variant=\"success\">User Deleted Successfully</MessageBox>\n//       )}\n//       {loading ? (\n//         <LoadingBox></LoadingBox>\n//       ) : error ? (\n//         <MessageBox variant=\"danger\">{error}</MessageBox>\n//       ) : (\n//         <table className=\"table\">\n//           <thead>\n//             <tr>\n//               <th>ID</th>\n//               <th>NAME</th>\n//               <th>EMAIL</th>\n//               {/* <th>IS SELLER</th> */}\n//               {/* <th>IS ADMIN</th> */}\n//               <th>ACTIONS</th>\n//             </tr>\n//           </thead>\n//           <tbody>\n//             {users.map((user) => (\n//               <tr key={user._id}>\n//                 <td>{user._id}</td>\n//                 <td>{user.name}</td>\n//                 <td>{user.email}</td>\n//                 {/* <td>{user.isSeller ? 'YES' : ' NO'}</td> */}\n//                 {/* <td>{user.isAdmin ? 'YES' : 'NO'}</td> */}\n//                 <td>\n//                   <button\n//                     type=\"button\"\n//                     className=\"small\"\n//                     onClick={() => props.history.push(`/user/${user._id}/edit`)}\n//                   >\n//                     Edit\n//                   </button>\n//                   <button\n//                     type=\"button\"\n//                     className=\"small\"\n//                     onClick={() => deleteHandler(user)}\n//                   >\n//                     Delete\n//                   </button>\n//                 </td>\n//               </tr>\n//             ))}\n//           </tbody>\n//         </table>\n//       )}\n//     </div>\n//   );\n// }","map":{"version":3,"sources":["D:/duantotnghiep/frontend/src/screens/UserListScreen.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["// import React, { useEffect } from 'react';\n// import { useDispatch, useSelector } from 'react-redux';\n// import { deleteUser, listUsers } from '../actions/userActions';\n// import LoadingBox from '../components/LoadingBox';\n// import MessageBox from '../components/MessageBox';\n// import { USER_DETAILS_RESET } from '../constants/userConstants';\n\n// export default function UserListScreen(props) {\n//   const userList = useSelector((state) => state.userList);\n//   const { loading, error, users } = userList;\n\n//   const userDelete = useSelector((state) => state.userDelete);\n//   const {\n//     loading: loadingDelete,\n//     error: errorDelete,\n//     success: successDelete,\n//   } = userDelete;\n\n//   const dispatch = useDispatch();\n//   useEffect(() => {\n//     dispatch(listUsers());\n//     dispatch({\n//       type: USER_DETAILS_RESET,\n//     });\n//   }, [dispatch, successDelete]);\n//   const deleteHandler = (user) => {\n//     if (window.confirm('Are you sure?')) {\n//       dispatch(deleteUser(user._id));\n//     }\n//   };\n//   return (\n//     <div>\n//       <h1>Users</h1>\n//       {loadingDelete && <LoadingBox></LoadingBox>}\n//       {errorDelete && <MessageBox variant=\"danger\">{errorDelete}</MessageBox>}\n//       {successDelete && (\n//         <MessageBox variant=\"success\">User Deleted Successfully</MessageBox>\n//       )}\n//       {loading ? (\n//         <LoadingBox></LoadingBox>\n//       ) : error ? (\n//         <MessageBox variant=\"danger\">{error}</MessageBox>\n//       ) : (\n//         <table className=\"table\">\n//           <thead>\n//             <tr>\n//               <th>ID</th>\n//               <th>NAME</th>\n//               <th>EMAIL</th>\n//               {/* <th>IS SELLER</th> */}\n//               {/* <th>IS ADMIN</th> */}\n//               <th>ACTIONS</th>\n//             </tr>\n//           </thead>\n//           <tbody>\n//             {users.map((user) => (\n//               <tr key={user._id}>\n//                 <td>{user._id}</td>\n//                 <td>{user.name}</td>\n//                 <td>{user.email}</td>\n//                 {/* <td>{user.isSeller ? 'YES' : ' NO'}</td> */}\n//                 {/* <td>{user.isAdmin ? 'YES' : 'NO'}</td> */}\n//                 <td>\n//                   <button\n//                     type=\"button\"\n//                     className=\"small\"\n//                     onClick={() => props.history.push(`/user/${user._id}/edit`)}\n//                   >\n//                     Edit\n//                   </button>\n//                   <button\n//                     type=\"button\"\n//                     className=\"small\"\n//                     onClick={() => deleteHandler(user)}\n//                   >\n//                     Delete\n//                   </button>\n//                 </td>\n//               </tr>\n//             ))}\n//           </tbody>\n//         </table>\n//       )}\n//     </div>\n//   );\n// }\n"]},"metadata":{},"sourceType":"module"}