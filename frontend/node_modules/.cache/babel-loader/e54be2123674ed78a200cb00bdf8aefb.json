{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\84925\\\\Downloads\\\\amazona-master\\\\amazona-master\\\\frontend\\\\src\\\\screens\\\\OrderEditScreen.js\";\nimport React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Axios from 'axios';\nimport { detailsOrder, deliverOrder } from '../actions/orderActions';\nimport LoadingBox from '../components/LoadingBox';\nimport MessageBox from '../components/MessageBox';\nimport { ORDER_DELIVER_RESET } from '../constants/orderConstants';\nimport { deleteOrder, listOrders } from '../actions/orderActions';\nexport default function OrderEditScreen(props) {\n  const orderId = props.match.params.id;\n  const [deliver, setDeliver] = useState(''); // const orderList = useSelector((state) => state.orderList);\n  // const {  order } = orderList;\n\n  const orderDetails = useSelector(state => state.orderDetails);\n  const {\n    loading,\n    error,\n    order\n  } = orderDetails;\n  const orderDeliver = useSelector(state => state.orderDeliver);\n  const {\n    // loading: loadingDeliver,\n    // error: errorDeliver,\n    success: successDeliver\n  } = orderDeliver;\n  const dispatch = useDispatch();\n  useEffect(() => {\n    if (successDeliver) {\n      props.history.push('/orderlist');\n    }\n\n    if (!order || order._id !== orderId || successDeliver) {\n      dispatch({\n        type: ORDER_DELIVER_RESET\n      });\n      dispatch(detailsOrder(orderId));\n    } else {\n      // if(order){\n      setDeliver(order.deliver); //   setPrice(product.price);\n      //   setImage(product.image);\n      //   setCategory(product.category);\n      //   setCountInStock(product.countInStock);\n      //   setBrand(product.brand);\n      //   setDescription(product.description);\n    }\n  }, [order, dispatch, orderId, successDeliver, props.history]);\n\n  const submitHandler = e => {\n    e.preventDefault(); // TODO: dispatch update product\n\n    dispatch(deliverOrder({\n      _id: orderId,\n      // _id: productId,\n      // name,\n      // price,\n      // image,\n      // category,\n      // brand,\n      // countInStock,\n      // description,\n      deliver\n    }));\n  }; // const [loadingDeliver, setLoadingDeliver] = useState(false);\n  // const [errorDeliver, setErrorDeliver] = useState('');\n  //   const userSignin = useSelector((state) => state.userSignin);\n  //   const { userInfo } = userSignin;\n  //   const uploadFileHandler = async (e) => {\n  // const file = e.target.files[0].name;\n  // const bodyFormData = new FormData();\n  // bodyFormData.append('image', file);\n  // setLoadingUpload(true);\n  // try {\n  //   const { data } = await Axios.post('/api/uploads', {\n  // headers: {\n  //   'Content-Type': 'multipart/form-data',\n  //   Authorization: `Bearer ${userInfo.token}`,\n  // },\n  //   });\n  //   setImage(data);\n  //   setLoadingUpload(false);\n  // } catch (error) {\n  //   setErrorUpload(error.message);\n  //   setLoadingUpload(false);\n  // }\n  //   };\n\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    className: \"form\",\n    onSubmit: submitHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 11\n    }\n  }, \"H\\xE3y nh\\u1EA5n n\\xFAt n\\u1EBFu b\\u1EA1n \\u0111\\xE3 giao h\\xE0ng (m\\xE3 \\u0111\\u01A1n \\u0111\\u01A1n h\\xE0ng \", orderId, \" )\")), /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"deliver\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 15\n    }\n  }, \"deliver\"), /*#__PURE__*/React.createElement(\"input\", {\n    id: \"deliver\" // rows=\"3\"\n    ,\n    type: \"text\",\n    placeholder: \"Enter descripion\",\n    value: deliver,\n    onChange: e => setDeliver(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"primary\",\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 15\n    }\n  }, \"\\u0110\\xE3 giao\")))));\n}","map":{"version":3,"sources":["C:/Users/84925/Downloads/amazona-master/amazona-master/frontend/src/screens/OrderEditScreen.js"],"names":["React","useEffect","useState","useDispatch","useSelector","Axios","detailsOrder","deliverOrder","LoadingBox","MessageBox","ORDER_DELIVER_RESET","deleteOrder","listOrders","OrderEditScreen","props","orderId","match","params","id","deliver","setDeliver","orderDetails","state","loading","error","order","orderDeliver","success","successDeliver","dispatch","history","push","_id","type","submitHandler","e","preventDefault","target","value"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Axios from 'axios';\r\nimport { detailsOrder, deliverOrder } from '../actions/orderActions';\r\nimport LoadingBox from '../components/LoadingBox';\r\nimport MessageBox from '../components/MessageBox';\r\nimport { ORDER_DELIVER_RESET } from '../constants/orderConstants';\r\n\r\nimport { deleteOrder, listOrders } from '../actions/orderActions';\r\nexport default function OrderEditScreen(props) {\r\n  const orderId = props.match.params.id;\r\n  const [deliver, setDeliver] = useState('');\r\n  // const orderList = useSelector((state) => state.orderList);\r\n\r\n  // const {  order } = orderList;\r\n  const orderDetails = useSelector((state) => state.orderDetails);\r\n  const { loading, error, order } = orderDetails;\r\n\r\n  const orderDeliver = useSelector((state) => state.orderDeliver);\r\n  const {\r\n    // loading: loadingDeliver,\r\n    // error: errorDeliver,\r\n    success: successDeliver,\r\n  } = orderDeliver;\r\n\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    if (successDeliver) {\r\n      props.history.push('/orderlist');\r\n    }\r\n    if (!order || order._id !== orderId || successDeliver) {\r\n      dispatch({ type: ORDER_DELIVER_RESET });\r\n      dispatch(detailsOrder(orderId));\r\n    } else {\r\n      // if(order){\r\n      setDeliver(order.deliver);\r\n    //   setPrice(product.price);\r\n    //   setImage(product.image);\r\n    //   setCategory(product.category);\r\n    //   setCountInStock(product.countInStock);\r\n    //   setBrand(product.brand);\r\n    //   setDescription(product.description);\r\n    }\r\n  }, [order, dispatch , orderId,  successDeliver, props.history]);\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    // TODO: dispatch update product\r\n    dispatch(\r\n        deliverOrder({\r\n          _id:orderId,\r\n        // _id: productId,\r\n        // name,\r\n        // price,\r\n        // image,\r\n        // category,\r\n        // brand,\r\n        // countInStock,\r\n        // description,\r\n        deliver,\r\n      })\r\n    );\r\n  };\r\n  // const [loadingDeliver, setLoadingDeliver] = useState(false);\r\n  // const [errorDeliver, setErrorDeliver] = useState('');\r\n\r\n//   const userSignin = useSelector((state) => state.userSignin);\r\n//   const { userInfo } = userSignin;\r\n//   const uploadFileHandler = async (e) => {\r\n    // const file = e.target.files[0].name;\r\n    // const bodyFormData = new FormData();\r\n    // bodyFormData.append('image', file);\r\n    // setLoadingUpload(true);\r\n    // try {\r\n    //   const { data } = await Axios.post('/api/uploads', {\r\n        // headers: {\r\n        //   'Content-Type': 'multipart/form-data',\r\n        //   Authorization: `Bearer ${userInfo.token}`,\r\n        // },\r\n    //   });\r\n    //   setImage(data);\r\n    //   setLoadingUpload(false);\r\n    // } catch (error) {\r\n    //   setErrorUpload(error.message);\r\n    //   setLoadingUpload(false);\r\n    // }\r\n//   };\r\n\r\n  return (\r\n    <div>\r\n      <form className=\"form\" onSubmit={submitHandler}>\r\n        <div>\r\n          <h1>Hãy nhấn nút nếu bạn đã giao hàng (mã đơn đơn hàng {orderId} )</h1>\r\n        </div>\r\n        {/* {loadingDeliver && <LoadingBox></LoadingBox>} */}\r\n        {/* {errorDeliver && <MessageBox variant=\"danger\">{errorDeliver}</MessageBox>} */}\r\n        {/* {loading ? (\r\n          <LoadingBox></LoadingBox>\r\n        ) : error ? (\r\n          <MessageBox variant=\"danger\">{error}</MessageBox>\r\n        ) : ( */}\r\n          <>\r\n            {/* <div>\r\n              <label htmlFor=\"name\">Name</label>\r\n              <input\r\n                id=\"name\"\r\n                type=\"text\"\r\n                placeholder=\"Enter name\"\r\n                value={name}\r\n                onChange={(e) => setName(e.target.value)}\r\n              ></input>\r\n            </div> */}\r\n            {/* <div>\r\n              <label htmlFor=\"price\">Price</label>\r\n              <input\r\n                id=\"price\"\r\n                type=\"text\"\r\n                placeholder=\"Enter price\"\r\n                value={price}\r\n                onChange={(e) => setPrice(e.target.value)}\r\n              ></input>\r\n            </div> */}\r\n            {/* <div>\r\n              <label htmlFor=\"image\">Image</label>\r\n              <input\r\n                id=\"image\"\r\n                type=\"text\"\r\n                placeholder=\"Enter image\"\r\n                value={ image}\r\n                onChange={(e) => setImage(e.target.value)}\r\n              ></input>\r\n            </div> */}\r\n            {/* <div>\r\n              <label htmlFor=\"imageFile\">Image File</label>\r\n              <input\r\n                type=\"file\"\r\n                id=\"imageFile\"\r\n                label=\"Choose Image\"\r\n                onChange={uploadFileHandler}\r\n              ></input>\r\n              {loadingUpload && <LoadingBox></LoadingBox>}\r\n              {errorUpload && (\r\n                <MessageBox variant=\"danger\">{errorUpload}</MessageBox>\r\n              )}\r\n            </div> */}\r\n            {/* <div>\r\n              <label htmlFor=\"category\">Category</label>\r\n              <input\r\n                id=\"category\"\r\n                type=\"text\"\r\n                placeholder=\"Enter category\"\r\n                value={category}\r\n                onChange={(e) => setCategory(e.target.value)}\r\n              ></input>\r\n            </div>\r\n            <div>\r\n              <label htmlFor=\"brand\">Brand</label>\r\n              <input\r\n                id=\"brand\"\r\n                type=\"text\"\r\n                placeholder=\"Enter brand\"\r\n                value={brand}\r\n                onChange={(e) => setBrand(e.target.value)}\r\n              ></input>\r\n            </div>\r\n            <div>\r\n              <label htmlFor=\"countInStock\">Count In Stock</label>\r\n              <input\r\n                id=\"countInStock\"\r\n                type=\"text\"\r\n                placeholder=\"Enter countInStock\"\r\n                value={countInStock}\r\n                onChange={(e) => setCountInStock(e.target.value)}\r\n              ></input>\r\n            </div> */}\r\n            <div>\r\n              <label htmlFor=\"deliver\">deliver</label>\r\n              <input\r\n                id=\"deliver\"\r\n                // rows=\"3\"\r\n                type=\"text\"\r\n                placeholder=\"Enter descripion\"\r\n              value={deliver}\r\n                onChange={(e) => setDeliver(e.target.value)}\r\n              ></input>\r\n            </div>\r\n            <div>\r\n              <label></label>\r\n              <button className=\"primary\" type=\"submit\">\r\n                Đã giao\r\n              </button>\r\n            </div>\r\n          </>\r\n        \r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}